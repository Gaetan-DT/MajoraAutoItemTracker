<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMAOAADADgAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8Aqampv87OznT///8A////AP///wD///8A////AP//
        /wD///8AAAAAPwAAAP8AAAA/////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8Ae6W9ByxFX+dPVlj/i4uS/8HAu17///8A////AP//
        /wD///8A////AAIHCz8KGSr/AAIE/wAAAP8AAAA/////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wCptb1Lnr3R/2yQrf8/VWX/ZWpu/2tj
        Y37///8A////AP///wD///8AFixH/xk4XP8MHTH/AAEC/wAAAP8AAAA/////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AMbGxsjCwsL/rMDQ/5a3
        zv9Mb4H/PkhWySE5Ugf///8A////AP///wAKHC2/J0pu/xUyU/8LHC7/AAAA/wAAAP8AAAA/////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8Agqi9S5Cv
        zP/IyMn/sLW5/5m51f95nbb/Mk1e6P///wD///8A////AP///wAaNlP/Kkxy/xItSv8HFCL/AAAB/wAA
        AP8AAAA/////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAzgAAANUAAAD/AAAA/wAA
        AP8AAAD/j5ug/5S10P9mhpv/QFRe/2lsddiRu9fxUG+K/zFKY3T///8A////AAEHCz8rS27/Jkhr/xMu
        TP8KGCn/AAEC/wAAAP8AAAD/AAAA/wAAAP8AAAB/////AP///wD///8A////AP///wAvNoH/DQ4o/xQX
        Ov8WGT//DxAp/wAAAv8AAAD/BQUG/6C+zv+Irsj/NE5n/ypDWDCt1vdyd5q0/y5JY/8pSmMS////AAka
        Kz80V3z/L1J7/xAqRf8KGi3/CRgp/wkaLP8OIjn/AwgNvwAAAD////8A////AP///wD///8A////ABQq
        W/8PP3//QG7a/yAtYP8iJVP/Gh1H/xARLv8AAAD/AQEB+Zy61kuWutaAb46g/y1FXrOOxu1LlrrayGKF
        nugjPVaz////AA0fMz8wUHT/Kkxw/xQvTv8WNFb/Chkq/wUNFv8AAQN/////AP///wAAAAA/AAAAvwAA
        AD////8AGyFT/ycsZv9CTaH/NGnE/zhmwP8sM2n/HCBM/xkdRP8AAAD/AAAAMv///wCczvegfaPA2EZi
        e+0oQltMi8Hpsnekxvc9WnD/KUJaRQQPGD8vTnH/MVV8/xIsSf8KGiv/AAAA/wAAAP8AAAB/AEMAPwA6
        AP8AAgD/AAAAv////wAyOYD/Iidf/y00eP87QIr/XXfA/0qE4f82P3D/ICRQ/woLIP8AAADV////AP//
        /wCt1vcMjMHn/1+Eov8pSmOilM73Fp7H5/92k6r8d3d05gQMFT8sSmv/MlR4/xArR/8JGiz/AwgO/wAA
        AP8ASwD/AGAA/wEdAf8AAAC/////ADY8i/9GTZ7/MTh5/0lQoP9ETJv/Vmm1/0eA2f86Pm7/Exc8/wAA
        AP////8A////AP///wD///8Atdb3WH+szP9IaYX/LUVagOj3/n7SztLYdF5j/2pBSf9LVmzfNll//xg1
        Vv8PJT7/BAwT/wE0Bf8BSQP/AAYA/wAAAL////8AOT+R/1ddt/96gdf/dHzM/0dMlP9MUaH/WnK//zxl
        vf8bHkn/AwQK/////wD///8A////AP///wD///8A////AJTO985pkqz/Mktj6HZ2chmum6X/hIqN/4eX
        pv8mRmj/PmKK/yNEZv8ULUr/FzZU/w8tQf8IERx/////AP///wAOEjH4Qkmb/4qS2//Cx/n/gonU/1le
        tf86QIz/SWPF/yw8g/8HCBXV////AP///wD///8A////AP///wD///8A////AKTN7kvI2+f/qKin/49e
        Zv+nf4L/nnN4/5SVnv8eKC3/MlFy/yNDZ/8RJz//AAEB/wAAAL////8A////AP///wAmLGj/Tlau/4eQ
        5/9tdcj/OkGJ/z1ClP8kK27/Okui/wQHEdX///8A////AP///wD///8A////AP///wD///8A////AP//
        /wDv5+99jY2R/2tITv+DbHT/cFZd/0g3O2cGDxo/J0do/xw5W/8HEBr/AAAA/wAAAD////8A////AP//
        /wAQEiv2R06u/0VNp/86QZH/Nj2M/yktav8iJ1v2AAAAOAAAAHD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wCyipD/tZmg/6mQmf93lp/n////AP///wAMHC9/K01v/xUsRP8AAAD/AAAAP///
        /wD///8A////AP///wD///8A////AP///wAnDQxSIQsJ/ycNDP8mDQz/IQsK/w0EBP8AAAD/AAAAUP//
        /wD///8A////AP///wD///8A////ALV7hCWec3R+mWhrvZ5/hP+Ig4xM////AP///wAUJjm/ESM3////
        /wD///8A////AP///wD///8A////AP///wAKAgI0HwoJ+DYSEf84ExH/OhUT/z0XFf8+FxX/PRYU/y0P
        Dv8BAAD/AAAA/wAAAAr///8AAAAAJQAAAHUAAABMAAAABf///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8ACQICMywPDv9AFhT/QhcV/z8XFf89FxX/QRsZ/0Uf
        Hf9DHRv/PhcV/y8QDv8AAAD/AAAA/wAAAKsAFiP8ACM2/AAFB/oAAAD9AAAANP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wAVBwb5Ux0a/1gfHf9WHxz/VR8d/08f
        Hf9NIiD/TCcl/0kjIf9AGhj/OxUT/w0EA/8AAAD/AB4v6QAXJP8AIjb/Aj9g/wAjNf4AAADA////AP//
        /wAAAAACAAAAFwAAAIsAAACvAAAAEP///wD///8A////AP///wD///8A////AEoaGP9qKCX/bSon/24r
        KP9nKSb/YScl/1wnJP9WJyX/SSIg/z8aGP87FhT/NRIR/wAOFf8AYpj/AEly/wI6Wf8BKkH/ACI0/wAq
        Qrb///8A////AAAAANkAAAD4AAAA+wAAAP0AAAD+AAAAK////wD///8A////AP///wAXCAc8cion/4I1
        Mf+IOjb/iD06/4I6Nv95NDH/ay0q/14nJP9RIB7/QRkX/zoVE/84ExH/BAEB/wGe7fFDu+n/AGum/wBS
        f/8ARmz/ADNQ5AAAABL///8AACpA8wA2Uv8AJz7/ACU5/gALEP4AAADI////AP///wD///8A////ADMS
        EFGEMi7/lkE9/6NOSv+qV1P/qFdU/5dKR/+COzf/bC0q/1wjIf9JGxn/ORQS/zYSEf8GAgL/AAsQYk3K
        59sPn+n/AHa3/wBTgf0ACQ/tAAAA+QAAAHoTbJHkABws/wAiNf8CMEn/Az9g/wAiNLz///8A////AP//
        /wD///8AHwsKKI83M/+pTUj/x2tn/+eTj//kko7/wG1p/5dKR/99NjP/aSgm/1QeG/8/FhT/NBEQ/wMB
        Af8AAABS////AABqoDoAIzaeACg/4wIvSe4AHzD+AAMG+Qp3rfEBcq//AGmj/wBcjv8AT3r/ADpaqv//
        /wD///8A////AP///wD///8AUx8d/7ZUT//phoH//tnU///l4f/qmpb/sF1Z/4xAPP9zLir/XiIf/0UY
        Fv8iCwr/AAAA/////wD///8A////AAFsp/8APF3/ABko/wApP/8AFB/7CpG61kvd/P8Ahc7/AHOz/wBd
        kPgAIDIm////AP///wD///8A////AP///wBlJiIzrklE/+B4c//9vLf//9zY//OgnP+7Y1//k0I+/3sy
        Lv9iJCH/SBgW/wgCAv8AAAAm////AP///wD///8ANMr7/w6Hxv8AVYP/AD9h/wAJDscAAAADA7f5FwCN
        09QAca/GACpCHv///wD///8A////AP///wD///8A////AP///wA5FRTcvVVQ/9x6df/VlJD/rpqY/4hx
        b/+DRkP/eTIv/18iIP8gCgr9AAAAE////wD///8A////AP///wAFVnInXeD9+gqQ2fwAY5rfABIbE///
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAfCwrwMXN0/QCJ
        jf8AfYH/AmZp/wBNUP8gOzz/EwYF/f///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wAAio/ZAbm//zTS3f8dv8j/AJ+k/wBHSf8AAAAS////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wAAQ0bIia3A/154hf8AJif/ACcoJv///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wCHlZr/XGhz/wAAADL///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/n8f//g+D//4Hgf/+A4D//gPAf8AAwAfAACAHwAAQDEAIAABADAAAQA8
        AAEAPwADAD+AA4A/4AHAH/DB/APwZ/AAh//gAAP/4AADB+AAAwPAAAEDwAAAA8AAQAPgAOAD4ADgB/AB
        4P/4B////Af///4P////H/////////////8=
</value>
  </data>
</root>